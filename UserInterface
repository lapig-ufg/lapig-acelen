//Import modules
var run = require('users/Amazonas21/acelen:runclassification')
var styles = require('users/Amazonas21/acelen:styles')
var data = require('users/Amazonas21/acelen:datasets')
var func = require('users/Amazonas21/acelen:functions')


//Variables
var classrf, gppresult

var app = {
          gui:function(maplayer){
            
            //Panel of choose pasture type for classification in map
            //Split Tools
            var lblClass = ui.Label({
                        value:'CLASSIFICAÇÃO AUTOMÁTICA DE PASTAGEM - SENTINEL',
                        style:{fontSize:'20',fontWeight:'bold'}
            })
            var lblType = ui.Label('Tipo de pastagem')
            var selType = ui.Select({
              items:['Cultivada'],
              placeholder:'Escolha o tipo'
            })
            var pnTypePasture = ui.Panel([lblType,selType],
                        ui.Panel.Layout.Flow('horizontal'),
                        {stretch: 'both'}
            )
            
            //Panel of choose the year for classification in map
            var lblYear = ui.Label('Ano da análise')
            var selYear = ui.Select({
              items:['2018','2019','2020','2021','2022'],
              placeholder:'Escolha o ano'
            })
            var pnYear = ui.Panel([lblYear,selYear],
                        ui.Panel.Layout.Flow('horizontal'),
                        {stretch: 'both'}
            )
            
            //Panel of choose the year for classification in map
            var lblFarm = ui.Label('Nome da área')
            var selFarm = ui.Textbox({
              placeholder:'Área',
              style:{'width':'120px'}
            })
            var pnFarm = ui.Panel([lblFarm,selFarm],
                        ui.Panel.Layout.Flow('horizontal'),
                        {stretch: 'both'}
            )
            
            var btnClassify = ui.Button({label:'Classificação da área'})
                btnClassify.onClick(function(){
                    var typegrass = selType.getValue()
                    var year = ee.Number.parse(selYear.getValue()).getInfo()
                    var farm = selFarm.getValue().toUpperCase()
                    var area = data.datasets['test_data'].filter(ee.Filter.eq('Fazenda',farm))
                    app.loading()
                    classrf = run.getRun(typegrass,year,farm,maplayer)
                    maplayer.addLayer(area,{},'Fazenda - '+farm)
                    maplayer.addLayer(classrf,styles.styleclass,'Classification')
                    maplayer.centerObject(area)
                    
                })
            
            //Panel GPP trend
            //Split Tools
            var lblTool = ui.Label({
                        value:'PRODUTIVIDADE PRIMÁRIA BRUTA (GPP)',
                        style:{fontSize:'20',fontWeight:'bold'}
            })
            //GPP Initial
            var lblGPPInitial = ui.Label('Ano Inicial')
            var selGPPInitial = ui.Select({
              placeholder:'Selecione o ano',
              items:styles.gppyears,
              style:{'width':'120px'}
            })
            var pnGPPInitial = ui.Panel([lblGPPInitial,selGPPInitial],
                        ui.Panel.Layout.Flow('horizontal'),
                        {stretch: 'both'}
            )
            
            //GPP Final
            var lblGPPFinal = ui.Label('Ano Final')
            var selGPPFinal = ui.Select({
              placeholder:'Selecione o ano',
              items:styles.gppyears,
              style:{'width':'120px'}
            })
            
            var pnGPPFinal = ui.Panel([lblGPPFinal,selGPPFinal],
                        ui.Panel.Layout.Flow('horizontal'),
                        {stretch: 'both'}
            )
            //Button GPP visualize
            var btnGPP = ui.Button({label:' Gerar Visualização'})
                btnGPP.onClick(function(){
                      
                      //Parameters
                      var gppdata = data.datasets['gpp']
                      var initialYear = selGPPInitial.getValue()
                      var FinalYear = selGPPFinal.getValue()
                      
                      //Calculation trend GPP
                      gppresult = func.trendgpp(gppdata,initialYear,FinalYear,classrf)
                                 
                      //Add layers in map
                      maplayer.addLayer(gppresult['initial-gpp'],styles.gpp,'GPP - Inicial')
                      maplayer.addLayer(gppresult['final-gpp'],styles.gpp,'GPP - Final')
                })
            
            //Button GPP Trend
            var btnTrendGPP = ui.Button({label:'Gerar Tendência'})
                btnTrendGPP.onClick(function(){
                  //Parameters
                  var initialYear = selGPPInitial.getValue()
                  var FinalYear = selGPPFinal.getValue()
                  
                  //Add Layer Map
                  maplayer.addLayer(gppresult['trend'],styles.gpp_trend,'Tendencia - ('+initialYear+'/'+FinalYear+')')
                  
                })
            
            var pnGPPbtn = ui.Panel([btnGPP,btnTrendGPP],
                        ui.Panel.Layout.Flow('horizontal'),
                        {stretch: 'both'}
            )
            
            //Insert all panels into main panel
            var listPanels = [lblClass,pnTypePasture,pnYear,
                              pnFarm,btnClassify,lblTool,
                              pnGPPInitial,pnGPPFinal,pnGPPbtn
                              ]
                              
            var painelMain = ui.Panel({style: {width: '270px',position:'top-left'}})
            
            for (var i in listPanels){
              painelMain.add(listPanels[i])
            }
            
            return painelMain
            
          },
          loading:function(){
            var load = ui.Panel()
                load.add(ui.Label('Carregando..'))
          },
          init:function(){
              
              //Create map from app
              function newMap(){
                var map = ui.Map().clear();
                    map.setOptions('SATELLITE');
                    map.setCenter(-53.23,-16.48, 4)
                    
                return map
              }
        
              var maplayer = newMap()
        
              //Load all guis
              var gui = app.gui(maplayer) 
              var mapPainel = maplayer.add(gui)
              
              ui.root.widgets().reset([mapPainel]);
          }
}
//Initialize app
app.init();